{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","alert","this","contacts_form","htmlFor","label","type","pattern","title","required","onChange","id","input","form_button","Component","defaultProps","connect","dispatch","contact","post","then","data","catch","error","addContact","contacts","filter","target","ContactListItem","contact_name","contact_number","ContactList","onfetchContacts","isLoadingContacts","contact_list","map","contact_item","onClick","item_button","getVisibleContacts","normalizedFilter","toLowerCase","includes","items","loading","delete","deleteContact","a","get","App","React","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cddd735d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_form\":\"ContactForm_contacts_form__39L6R\",\"form_button\":\"ContactForm_form_button__26PzN\",\"label\":\"ContactForm_label__16CYT\",\"input\":\"ContactForm_input__3xvir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat_list\":\"ContactList_stat_list__2D_zc\",\"item\":\"ContactList_item__bOQvX\",\"contact_list\":\"ContactList_contact_list__tFmCB\",\"contact_item\":\"ContactList_contact_item__3zaS2\",\"item_button\":\"ContactList_item_button__wiQmT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"Filter_friend_list__2L7nM\",\"item\":\"Filter_item__HXVZf\",\"avatar\":\"Filter_avatar__3eRFv\",\"name\":\"Filter_name__3KdT-\",\"status_isOnline\":\"Filter_status_isOnline__wFV4D\",\"status_isOffline\":\"Filter_status_isOffline__2QDNC\",\"label\":\"Filter_label__3aKtv\",\"input\":\"Filter_input__2nVSz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_name\":\"ContactListItem_contact_name__19HRC\",\"contact_number\":\"ContactListItem_contact_number__3XcH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3rca-\"};","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","// import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n// ---------------------------async-await-------------------------\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook/phonebook-operations';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static defaultProps = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    if (name !== '' && number !== '') {\r\n      this.props.onSubmit(name, number);\r\n      this.reset();\r\n      return;\r\n    }\r\n    alert('Please fill empty fields');\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className={styles.contacts_form}>\r\n          <div>\r\n            <label htmlFor={this.nameInputId} className={styles.label}>\r\n              Name\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                onChange={this.handleChange}\r\n                id={this.nameInputId}\r\n                className={styles.input}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label htmlFor={this.numberInputId} className={styles.label}>\r\n              Number\r\n              <input\r\n                type=\"tel\"\r\n                value={number}\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                onChange={this.handleChange}\r\n                id={this.numberInputId}\r\n                className={styles.input}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <button type=\"submit\" className={styles.form_button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","// import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styles from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contact by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={styles.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../ContactListItem/ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number }) => {\r\n  return (\r\n    <>\r\n      <span className={styles.contact_name}>{name}: </span>\r\n      <span className={styles.contact_number}>{number}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nContactListItem.defaultProps = {\r\n  name: 'Hello World',\r\n  number: 123456789,\r\n};\r\nexport default ContactListItem;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-operations';\r\nimport ElementContactList from '../ContactListItem/ContactListItem';\r\nimport styles from './ContactList.module.css';\r\nimport { fetchContacts } from '../../redux/phonebook/phonebook-operations';\r\n\r\nclass ContactList extends Component {\r\n  static propTypes = {\r\n    onFetchContacts: PropTypes.func,\r\n    contacts: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onfetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isLoadingContacts && <h1>...Loading</h1>}\r\n\r\n        <ul className={styles.contact_list}>\r\n          {this.props.contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={styles.contact_item}>\r\n              <ElementContactList name={name} number={number} />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  this.props.onClick(id);\r\n                }}\r\n                className={styles.item_button}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter, loading } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n  isLoadingContacts: loading,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: id => dispatch(deleteContact(id)),\r\n  onfetchContacts: () => dispatch(fetchContacts()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\n// import {Connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Container from './components/Container/Container';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\n// import { fetchContacts } from './redux/phonebook/phonebook-operations';\r\n\r\nclass App extends React.Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.array,\r\n    filter: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <h1>Phonebook</h1>\r\n          <ContactForm />\r\n\r\n          <h2>Contacts</h2>\r\n          <Filter />\r\n\r\n          <ContactList />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactSuccess,\r\n  fetchContactRequest,\r\n  fetchContactError,\r\n  addContactError,\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  changeFilter,\r\n} from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  // [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    if (state.map(contact => contact.name).includes(payload.name)) {\r\n      return alert(`${payload.name} is already exist`);\r\n    }\r\n    return [...state, payload];\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './phonebook/phonebook-reducer';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport './styles.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}