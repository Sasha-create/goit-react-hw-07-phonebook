{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","alert","this","contacts_form","htmlFor","label","type","pattern","title","required","onChange","id","input","form_button","Component","connect","dispatch","contact","post","then","data","catch","error","addContact","contacts","filter","target","ContactListItem","contact_name","contact_number","defaultProps","ContactList","onfetchContacts","isLoadingContacts","contact_list","map","contact_item","onClick","item_button","getVisibleContacts","normalizedFilter","toLowerCase","includes","items","loading","delete","deleteContact","a","get","App","React","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4630a738.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_form\":\"ContactForm_contacts_form__39L6R\",\"form_button\":\"ContactForm_form_button__26PzN\",\"label\":\"ContactForm_label__16CYT\",\"input\":\"ContactForm_input__3xvir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat_list\":\"ContactList_stat_list__2D_zc\",\"item\":\"ContactList_item__bOQvX\",\"contact_list\":\"ContactList_contact_list__tFmCB\",\"contact_item\":\"ContactList_contact_item__3zaS2\",\"item_button\":\"ContactList_item_button__wiQmT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"Filter_friend_list__2L7nM\",\"item\":\"Filter_item__HXVZf\",\"avatar\":\"Filter_avatar__3eRFv\",\"name\":\"Filter_name__3KdT-\",\"status_isOnline\":\"Filter_status_isOnline__wFV4D\",\"status_isOffline\":\"Filter_status_isOffline__2QDNC\",\"label\":\"Filter_label__3aKtv\",\"input\":\"Filter_input__2nVSz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_name\":\"ContactListItem_contact_name__19HRC\",\"contact_number\":\"ContactListItem_contact_number__3XcH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3rca-\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","// import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n// ---------------------------async-await-------------------------\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/phonebook/phonebook-operations';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n   state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (name !== '' && number !== '') {\n      this.props.onSubmit(name, number);\n      this.reset();\n      return;\n    }\n    alert('Please fill empty fields');\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} className={styles.contacts_form}>\n          <div>\n            <label htmlFor={this.nameInputId} className={styles.label}>\n              Name\n              <input\n                type=\"text\"\n                value={name}\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                onChange={this.handleChange}\n                id={this.nameInputId}\n                className={styles.input}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor={this.numberInputId} className={styles.label}>\n              Number\n              <input\n                type=\"tel\"\n                value={number}\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                onChange={this.handleChange}\n                id={this.numberInputId}\n                className={styles.input}\n              />\n            </label>\n          </div>\n\n          <button type=\"submit\" className={styles.form_button}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","// import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contact by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={styles.input}\n      />\n    </label>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../ContactListItem/ContactListItem.module.css';\n\nconst ContactListItem = ({ name, number }) => {\n  return (\n    <>\n      <span className={styles.contact_name}>{name}: </span>\n      <span className={styles.contact_number}>{number}</span>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nContactListItem.defaultProps = {\n  name: 'Hello World',\n  number: 123456789,\n};\nexport default ContactListItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from '../../redux/phonebook/phonebook-operations';\nimport ElementContactList from '../ContactListItem/ContactListItem';\nimport styles from './ContactList.module.css';\nimport { fetchContacts } from '../../redux/phonebook/phonebook-operations';\n\nclass ContactList extends Component {\n  static propTypes = {\n    onFetchContacts: PropTypes.func,\n    contacts: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.onfetchContacts();\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.isLoadingContacts && <h1>...Loading</h1>}\n\n        <ul className={styles.contact_list}>\n          {this.props.contacts.map(({ id, name, number }) => (\n            <li key={id} className={styles.contact_item}>\n              <ElementContactList name={name} number={number} />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.props.onClick(id);\n                }}\n                className={styles.item_button}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter, loading } }) => ({\n  contacts: getVisibleContacts(items, filter),\n  isLoadingContacts: loading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: id => dispatch(deleteContact(id)),\n  onfetchContacts: () => dispatch(fetchContacts()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\n// import {Connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n// import { fetchContacts } from './redux/phonebook/phonebook-operations';\n\nclass App extends React.Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <Container>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactForm />\n\n          <h2>Contacts</h2>\n          <Filter />\n\n          <ContactList />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactSuccess,\r\n  fetchContactRequest,\r\n  fetchContactError,\r\n  addContactError,\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  changeFilter,\r\n} from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n// const items = createReducer([], {\r\n//   [fetchContactSuccess]: (_, { payload }) => payload,\r\n//   [addContactSuccess]: (state, { payload }) => {\r\n//     if (state.map(contact => contact.name).includes(payload.name)) {\r\n//       return alert(`${payload.name} is already exist`);\r\n//     }\r\n//     return [...state, payload];\r\n//   },\r\n//   [deleteContactSuccess]: (state, { payload }) =>\r\n//     state.filter(({ id }) => id !== payload),\r\n// });\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from './phonebook/phonebook-reducer';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './styles.css';\nimport 'modern-normalize/modern-normalize.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}